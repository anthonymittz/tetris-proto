{"version":3,"file":"tetris.js","mappings":"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","sources":["webpack://tetris-game/./src/index.js","webpack://tetris-game/./src/components/Tetris.js","webpack://tetris-game/./src/components/app/controls/Controls.js","webpack://tetris-game/./src/components/app/drawing/ArenaView.js","webpack://tetris-game/./src/components/app/drawing/PlayerView.js","webpack://tetris-game/./src/components/app/drawing/PreviewView.js","webpack://tetris-game/./src/components/app/drawing/Renderer.js","webpack://tetris-game/./src/components/app/events/Events.js","webpack://tetris-game/./src/components/app/game/Actions.js","webpack://tetris-game/./src/components/app/game/Game.js","webpack://tetris-game/./src/components/app/storage/Storage.js","webpack://tetris-game/./src/components/dom/Canvas.js","webpack://tetris-game/./src/components/dom/Overlay.js","webpack://tetris-game/./src/components/dom/elements.js","webpack://tetris-game/./src/components/entities/arena/Arena.js","webpack://tetris-game/./src/components/entities/bag/Bag.js","webpack://tetris-game/./src/components/entities/matrix/Matrix.js","webpack://tetris-game/./src/components/entities/player/Player.js","webpack://tetris-game/./src/components/entities/tetromino/Tetromino.js","webpack://tetris-game/webpack/bootstrap"],"sourcesContent":["const Tetris = require('./components/Tetris');\nconst Storage = require('./components/app/storage/Storage');\nconst Controls = require('./components/app/controls/Controls');\nconst Events = require('./components/app/events/Events');\n\nfunction main() {\n  const tetris = new Tetris();\n  const controls = new Controls(tetris);\n  const events = new Events(controls);\n\n  events.register();\n  tetris.run();\n}\n\nmain();\n","const Game = require('./app/game/Game');\nconst Overlay = require('./dom/Overlay');\nconst Renderer = require('./app/drawing/Renderer');\nconst elements = require('./dom/elements');\n\nclass Tetris {\n  constructor() {\n    this.overlay = new Overlay(elements.overlay, () => this.pause());\n\n    this.game = new Game();\n    this.renderer = new Renderer(this.game);\n\n    this.isPaused = true;\n    this.lastRendered = 0; //ms\n    this.stepCounter = 0; //ms\n    this.interval = 1000; //ms\n\n    this.restart();\n  }\n\n  run(time = 0) {\n    this.isPaused || this.#tryToStep(time);\n    this.renderer.draw();\n\n    requestAnimationFrame(time => this.run(time));\n  }\n\n  pause() {\n    if (this.isPaused) {\n      this.isPaused = false;\n      this.overlay.hide();\n    } else {\n      this.isPaused = true;\n      this.overlay.showPauseScreen();\n    }\n  }\n\n  restart() {\n    this.isPaused = true;\n    this.lastRendered = 0; //ms\n    this.stepCounter = 0; //ms\n    this.interval = 1000; //ms\n\n    this.overlay.showNewGameScreen();\n  }\n\n  finish() {\n    this.isPaused = true;\n    this.game.finish();\n    this.overlay.showFinishScreen();\n  }\n\n  #tryToStep(time) {\n    this.stepCounter += time - this.lastRendered;\n    this.lastRendered = time;\n    this.stepCounter > this.interval && this.#step();\n  }\n\n  #step() {\n    this.game.actions.drop();\n    this.stepCounter = 0;\n    elements.score.innerText = this.game.player.pos.y;\n  }\n}\n\nmodule.exports = Tetris;\n","class Controls {\n  constructor(tetris) {\n    this.tetris = tetris;\n    this.actions = tetris.game.actions;\n    this.bindingList = Object.keys(this.bindings);\n  }\n\n  press(event) {\n    this.bindingList.forEach(\n      binding =>\n        this.bindings[binding].keys.includes(event.code) &&\n        this.bindings[binding].action(event)\n    );\n  }\n\n  bindings = {\n    left: {\n      keys: ['KeyA', 'ArrowLeft'],\n      action: () => this.tetris.isPaused || this.actions.move(-1),\n    },\n    right: {\n      keys: ['KeyD', 'ArrowRight'],\n      action: () => this.tetris.isPaused || this.actions.move(1),\n    },\n    drop: {\n      keys: ['KeyS', 'ArrowDown'],\n      action: () => this.tetris.isPaused || this.actions.drop(),\n    },\n    rotateCW: {\n      keys: ['KeyE', 'ArrowUp'],\n      action: () => this.tetris.isPaused || this.actions.rotate(-1),\n    },\n    rotateCCW: {\n      keys: ['KeyQ'],\n      action: () => this.tetris.isPaused || this.actions.rotate(1),\n    },\n    skip: {\n      keys: ['Space'],\n      action: () => this.tetris.isPaused || this.actions.skip(),\n    },\n    pause: {\n      keys: ['Escape', 'Enter'],\n      action: e => {\n        e.preventDefault();\n        this.tetris.pause();\n      },\n    },\n    restart: {\n      keys: ['KeyR'],\n      action: () => this.tetris.restart(),\n    },\n  };\n}\n\nmodule.exports = Controls;\n","class ArenaView {\n  constructor(arena, context, colors) {\n    this.arena = arena;\n    this.context = context;\n    this.colors = colors;\n  }\n\n  draw() {\n    this.clear();\n    this.arena.forEach((row, y) =>\n      row.forEach((value, x) => {\n        if (value !== 0) {\n          this.context.fillStyle = this.colors[value];\n          this.context.fillRect(x, y, 1, 1);\n        }\n      })\n    );\n  }\n\n  clear() {\n    this.context.fillStyle = this.colors[0];\n    this.context.fillRect(0, 0, this.arena[0].length, this.arena.length);\n  }\n}\n\nmodule.exports = ArenaView;\n","class PlayerView {\n  constructor(player, context, colors) {\n    this.player = player;\n    this.context = context;\n    this.colors = colors;\n  }\n\n  draw() {\n    this.player.tetromino.forEach((row, y) =>\n      row.forEach((value, x) => {\n        if (value !== 0) {\n          this.context.fillStyle = this.colors[value];\n          this.context.fillRect(\n            x + this.player.pos.x,\n            y + this.player.pos.y,\n            1,\n            1\n          );\n        }\n      })\n    );\n  }\n}\n\nmodule.exports = PlayerView;\n","class PreviewView {\n  constructor(nextTetromino, context, scale, colors) {\n    this.tetromino = nextTetromino;\n    this.context = context;\n    this.colors = colors;\n\n    this.width = this.context.canvas.clientWidth;\n    this.height = this.context.canvas.clientHeight;\n    this.scale = scale;\n    this.center = {\n      x: (this.width / this.scale / 2) | 0,\n      y: (this.height / this.scale / 2) | 0,\n    };\n  }\n\n  draw() {\n    this.clear();\n    const offset = this.#offset(\n      this.tetromino[0].length,\n      this.tetromino.length\n    );\n\n    this.tetromino.forEach((row, y) =>\n      row.forEach((value, x) => {\n        if (value !== 0) {\n          this.context.fillStyle = this.colors[value];\n          this.context.fillRect(x + offset.x, y + offset.y, 1, 1);\n        }\n      })\n    );\n  }\n\n  clear() {\n    this.context.fillStyle = this.colors[0];\n    this.context.fillRect(0, 0, this.width, this.height);\n  }\n\n  #offset(height, width) {\n    return {\n      x: this.center.x - ((width / 2) | 0),\n      y: this.center.y - ((height / 2) | 0),\n    };\n  }\n}\n\nmodule.exports = PreviewView;\n","const PlayerView = require('./PlayerView');\nconst ArenaView = require('./ArenaView');\nconst PreviewView = require('./PreviewView');\n\nconst elements = require('../../dom/elements');\nconst colors = require('../../../static/colors.json');\n\nclass Renderer {\n  constructor(game) {\n    this.arenaDrawer = new ArenaView(\n      game.arena,\n      elements.gameCanvas.context,\n      colors\n    );\n    this.playerDrawer = new PlayerView(\n      game.player,\n      elements.gameCanvas.context,\n      colors\n    );\n    this.previewDrawer = new PreviewView(\n      game.nextTetromino,\n      elements.previewCanvas.context,\n      elements.previewCanvas.scale,\n      colors\n    );\n  }\n\n  draw() {\n    this.arenaDrawer.draw();\n    this.playerDrawer.draw();\n    this.previewDrawer.draw();\n  }\n}\n\nmodule.exports = Renderer;\n","class Events {\n  constructor(controls) {\n    this.controls = controls;\n  }\n\n  register() {\n    window.addEventListener('keydown', e => this.keyDown(e));\n    window.addEventListener('beforeunload', () => this.beforeUnload());\n  }\n\n  unregister() {\n    window.removeEventListener('keydown', e => this.keyDown(e));\n    window.addEventListener('beforeunload', () => this.beforeUnload());\n  }\n\n  keyDown(event) {\n    this.controls.press(event);\n  }\n\n  beforeUnload() {}\n}\n\nmodule.exports = Events;\n","class Actions {\n  constructor(arena, player, progress) {\n    this.arena = arena;\n    this.player = player;\n    this.progress = progress;\n  }\n\n  drop() {\n    this.player.down();\n    if (this.arena.collide(this.player.tetromino, this.player.pos)) {\n      this.player.up();\n      this.progress();\n    }\n  }\n\n  rotate(direction) {\n    direction > 0 ? this.player.rotateCW() : this.player.rotateCCW();\n    console.log('[Actions] rotate', direction > 0 ? 'cw' : 'ccw');\n  }\n\n  move(direction) {\n    direction > 0 ? this.player.right() : this.player.left();\n    if (this.arena.collide(this.player.tetromino, this.player.pos)) {\n      direction > 0 ? this.player.left() : this.player.right();\n    }\n  }\n\n  skip() {\n    console.log('[Actions] skip');\n  }\n}\n\nmodule.exports = Actions;\n","const Actions = require('./Actions');\nconst Arena = require('../../entities/arena/Arena');\nconst Player = require('../../entities/player/Player');\nconst Bag = require('../../entities/bag/Bag');\n\nclass Game {\n  constructor() {\n    this.score = 0;\n    this.arena = new Arena();\n    this.bag = new Bag();\n    const currentTetromino = this.bag.pull();\n    this.nextTetromino = this.bag.next();\n    this.player = new Player(currentTetromino);\n\n    this.actions = new Actions(this.arena, this.player, () => this.progress());\n  }\n\n  addScore() {\n    this.score += 10;\n  }\n\n  progress() {\n    this.player.reset(this.nextTetromino);\n    this.nextTetromino = this.bag.pull();\n    this.addScore();\n  }\n\n  resume() {\n    console.log('[Game] resume');\n  }\n\n  finish() {\n    console.log('[Game] Finished', this.score);\n    this.summarize();\n  }\n\n  summarize() {\n    console.log('[Game] summarize');\n  }\n}\n\nmodule.exports = Game;\n","class Storage {\n  constructor() {}\n}\n\nmodule.exports = Storage;\n","const colors = require('../../static/colors.json');\n\nclass Canvas {\n  constructor(ref, options = Canvas.#defaultOptions) {\n    this.element = ref;\n    this.context = this.element.getContext('2d');\n    this.colors = colors;\n    this.width = this.element.width;\n    this.height = this.element.height;\n    this.scale = options.scale;\n    this.context.scale(this.scale, this.scale);\n\n    this.clear();\n  }\n\n  clear() {\n    this.context.fillStyle = this.colors[0];\n    this.context.fillRect(0, 0, this.width, this.height);\n  }\n\n  static #defaultOptions = {\n    scale: 20,\n  };\n}\n\nmodule.exports = Canvas;\n","class Overlay {\n  constructor(ref, close) {\n    this.element = ref;\n    this.state = Overlay.state.start;\n    this.visible = true;\n\n    this.element.addEventListener('click', () => close());\n  }\n\n  hide() {\n    this.#hide();\n    this.state = Overlay.state.hidden;\n  }\n\n  showNewGameScreen() {\n    this.#show();\n    this.state = Overlay.state.start;\n    this.#setText('start');\n  }\n\n  showPreviousGameScreen() {\n    this.#show();\n    this.state = Overlay.state.choose;\n    this.#setText('choose');\n  }\n\n  showPauseScreen() {\n    this.#show();\n    this.state = Overlay.state.pause;\n    this.#setText('pause');\n  }\n\n  showOptionsScreen() {\n    this.state = Overlay.state.options;\n    this.#setText('options');\n  }\n\n  showControlScreen() {\n    this.state = Overlay.state.controls;\n    this.#setText('controls');\n  }\n\n  showChartScreen() {\n    this.state = Overlay.state.chart;\n    this.#setText('chart');\n  }\n\n  showFinishScreen() {\n    this.#show();\n    this.state = Overlay.state.pause;\n    this.#setText('finish');\n  }\n\n  #setText(text) {\n    this.element.innerText = `[Overlay] ${text}.`;\n  }\n\n  #hide() {\n    this.element.classList.add('hidden');\n  }\n\n  #show() {\n    this.element.classList.remove('hidden');\n  }\n\n  static state = {\n    hidden: 'hidden',\n    start: 'start',\n    finish: 'finish',\n    choose: 'choose',\n    pause: 'pause',\n    options: 'options',\n    controls: 'controls',\n    chart: 'chart',\n  };\n}\n\nmodule.exports = Overlay;\n","const colors = require('../../static/colors.json');\nconst Canvas = require('./Canvas');\n\nclass Elements {\n  constructor() {\n    this.score = document.getElementById('score');\n    this.stopwatch = document.getElementById('stopwatch');\n    this.overlay = document.getElementById('overlay');\n    this.pause = document.getElementById('pause');\n    this.controls = document.getElementById('controls');\n\n    this.gameCanvas = new Canvas(document.getElementById('game'), {\n      colors,\n      scale: 20,\n    });\n\n    this.previewCanvas = new Canvas(document.getElementById('preview'), {\n      colors,\n      scale: 5,\n    });\n  }\n}\n\nconst elements = new Elements();\n\nmodule.exports = elements;\n","const Matrix = require('../matrix/Matrix');\nconst { arena } = require('../../../static/config.json');\n\nclass Arena extends Matrix {\n  constructor(width = arena.width, height = arena.height) {\n    super(width, height);\n  }\n\n  sweep() {\n    console.log('[arena] sweep');\n  }\n\n  reset() {\n    console.log('[arena] reset');\n  }\n}\n\nmodule.exports = Arena;\n","const Tetromino = require('../tetromino/Tetromino');\n\nclass Bag extends Array {\n  constructor(template) {\n    super();\n    template ? this.#fromTemplate(template) : this.#generate();\n  }\n\n  shake() {\n    this.#empty();\n    this.#refill();\n  }\n\n  equals(bag) {\n    if (bag.length !== this.length) return false;\n    return bag.every((element, i) => element === this[i]);\n  }\n\n  pull() {\n    let tetromino = this.shift();\n    if (this.length < 3) this.#refill();\n    return new Tetromino(tetromino);\n  }\n\n  next() {\n    return new Tetromino(this[0]);\n  }\n\n  #refill() {\n    const set = new Bag();\n    set.forEach(item => this.push(item));\n  }\n\n  #random(length) {\n    const result = [];\n    while (result.length < length) {\n      const num = Math.floor(Math.random() * length);\n      if (!result.includes(num)) result.push(num);\n    }\n    return result;\n  }\n\n  #generate() {\n    const sequence = this.#random(Bag.availableShapes.length);\n    sequence.forEach(index => this.push(Bag.availableShapes[index]));\n  }\n\n  #fromTemplate(template) {\n    this.#checkTemplate(template);\n    template.split('').forEach(letter => this.push(letter));\n  }\n\n  #checkTemplate(template) {\n    template.split('').forEach(letter => {\n      if (!Bag.availableShapes.includes(letter))\n        throw new Error(\n          'You must provide a template that contains only the known types of Tetrominoes.'\n        );\n    });\n  }\n\n  #empty() {\n    this.length = 0;\n  }\n\n  static availableShapes = Object.keys(Tetromino.shapes);\n}\n\nmodule.exports = Bag;\n","class Matrix extends Array {\n  constructor(width = 2, height = 2, array) {\n    super();\n    if (!array) {\n      Matrix.#checkWidthAndHeight(width, height);\n      while (height--) this.push(new Array(width).fill(0));\n    } else {\n      height = array.length;\n      let matrix = Matrix.fromArray(array);\n      matrix.forEach(row => this.push(row));\n    }\n  }\n\n  equals(matrix) {\n    Matrix.#checkIfMatrix(matrix);\n    if (matrix.length !== this.length) return false;\n    matrix.every((row, h) => {\n      row.every((value, w) => {\n        if (!this[h][w] || this[h][w] !== value) return false;\n      });\n    });\n    return true;\n  }\n\n  rotate(direction = 1) {\n    debugger;\n    console.log('[matrix] rotate!');\n    Matrix.#checkDirection(direction);\n    direction > 0 ? this.#rotateCW() : this.#rotateCCW();\n  }\n\n  width() {\n    return this[0].length;\n  }\n\n  height() {\n    return this.length;\n  }\n\n  fill(number = 0) {\n    this.forEach((row, h) => row.forEach((_, w) => (this[h][w] = number)));\n  }\n\n  collide(matrix, offset = { x: 0, y: 0 }) {\n    Matrix.#checkIfMatrix(matrix);\n    Matrix.#checkOffset(offset);\n    return this.#checkCollision(matrix, offset);\n  }\n\n  #checkCollision(m, o) {\n    for (let y = 0; y < m.length; y++) {\n      for (let x = 0; x < m[y].length; x++) {\n        if (m[y][x] !== 0 && (this[y + o.y] && this[y + o.y][x + o.x]) !== 0)\n          return true;\n      }\n    }\n    return false;\n  }\n\n  #rotateCW() {\n    const transposed = this.#transpose();\n    transposed.forEach((_, h) => (this[h] = transposed[h].reverse()));\n\n    this.#truncate(transposed.length);\n  }\n\n  #rotateCCW() {\n    const transposed = this.#transpose();\n    transposed.forEach((_, h) => (this[h] = transposed[h]));\n\n    this.#truncate(transposed.length);\n    this.reverse();\n  }\n\n  #transpose() {\n    return this[0].map((_, index) => this.map(row => row[index]));\n  }\n\n  #truncate(length) {\n    if (length < this.length) {\n      const amount = this.length - length;\n      this.splice(length, amount);\n    }\n  }\n\n  static fromArray(array) {\n    this.#checkIfArray(array);\n    this.#checkArrayShape(array);\n\n    const height = array.length;\n    const width = array[0].length;\n    const matrix = new Matrix(width, height);\n\n    array.forEach((row, h) => {\n      row.forEach((value, w) => {\n        matrix[h][w] = value;\n      });\n    });\n    return matrix;\n  }\n  static #checkIfArray(data) {\n    if (data === undefined || Array.isArray(data) === false)\n      throw new Error('You must provide an array.');\n  }\n  static #checkIfMatrix(data) {\n    if (data === undefined || !(data instanceof Matrix))\n      throw new Error('You must provide an instance of Matrix.');\n  }\n  static #checkWidthAndHeight(w, h) {\n    if (w < 2 || h < 2) throw new Error('Cannot be smaller than 2x2.');\n  }\n  static #checkArrayShape(array) {\n    let length = array[0].length;\n    array.forEach(row => {\n      if (row.length !== length)\n        throw new Error('All rows must have the same length.');\n    });\n  }\n  static #checkDirection(direction) {\n    if (!direction || typeof direction !== 'number' || direction === 0)\n      throw new Error(\n        'You must provide any positive or negative number except 0.'\n      );\n  }\n  static #checkOffset(offset) {\n    if (typeof offset.x !== 'number' || typeof offset.y !== 'number') {\n      throw new Error(\n        'You must provide an offset in format: {x: number, y: number}.'\n      );\n    }\n  }\n}\n\nmodule.exports = Matrix;\n","const { arena } = require('../../../static/config.json');\n\nclass Player {\n  constructor(tetromino) {\n    this.tetromino = tetromino;\n    this.pos = { x: Player.posX, y: 0 };\n    this.rot = 0;\n  }\n\n  left() {\n    this.pos.x--;\n  }\n\n  right() {\n    this.pos.x++;\n  }\n\n  up() {\n    this.pos.y--;\n  }\n\n  down() {\n    this.pos.y++;\n  }\n\n  rotateCW() {\n    this.rot++;\n    if (this.rot > 3) this.rot = 0;\n    this.tetromino.rotate();\n  }\n\n  rotateCCW() {\n    this.rot--;\n    if (this.rot < 0) this.rot = 3;\n    this.tetromino.rotate(-1);\n  }\n\n  drop(collide = () => true) {\n    while (!collide()) this.down();\n    this.up();\n  }\n\n  reset(tetromino) {\n    this.tetromino = tetromino;\n    this.pos = { x: Player.posX, y: 0 };\n    this.rot = 0;\n  }\n\n  static posX = (arena.width / 2) | 0;\n}\n\nmodule.exports = Player;\n","const Matrix = require('../matrix/Matrix');\nconst colors = require('../../../static/colors.json');\n\nclass Tetromino extends Matrix {\n  constructor(shape = 'T', color = Tetromino.#randomColor()) {\n    Tetromino.#checkType(shape);\n    let blank = Tetromino.#color(Tetromino.shapes[shape], color);\n    super(blank[0].length, blank.length, blank);\n  }\n\n  static shapes = {\n    I: [\n      [0, 1, 0, 0],\n      [0, 1, 0, 0],\n      [0, 1, 0, 0],\n      [0, 1, 0, 0],\n    ],\n    J: [\n      [0, 1, 0],\n      [0, 1, 0],\n      [1, 1, 0],\n    ],\n    L: [\n      [0, 1, 0],\n      [0, 1, 0],\n      [0, 1, 1],\n    ],\n    O: [\n      [1, 1],\n      [1, 1],\n    ],\n    S: [\n      [0, 0, 0],\n      [0, 1, 1],\n      [1, 1, 0],\n    ],\n    T: [\n      [0, 0, 0],\n      [1, 1, 1],\n      [0, 1, 0],\n    ],\n    Z: [\n      [0, 0, 0],\n      [1, 1, 0],\n      [0, 1, 1],\n    ],\n  };\n\n  static #checkType(shape) {\n    const shapes = Object.keys(Tetromino.shapes);\n    if (typeof shape !== 'string' || shape.length === 0) {\n      throw new Error(`Unknown type of tetromino: ${shape}`);\n    }\n    if (!shapes.includes(shape))\n      throw new Error(`Tetromino of the shape \"${shape}\" does not exist.`);\n  }\n\n  static #color(blank, color) {\n    return blank.map(row => row.map(value => (value === 0 ? 0 : color)));\n  }\n\n  static #randomColor() {\n    let color = (Math.random() * (colors.length - 1) + 1) | 0;\n    return color;\n  }\n}\n\nmodule.exports = Tetromino;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n"],"names":["tetris","Tetris","Controls","Game","require","Overlay","Renderer","elements","this","overlay","pause","game","renderer","isPaused","lastRendered","stepCounter","interval","restart","time","draw","requestAnimationFrame","run","hide","showPauseScreen","showNewGameScreen","finish","showFinishScreen","actions","drop","score","innerText","player","pos","y","module","exports","left","keys","action","move","right","rotateCW","rotate","rotateCCW","skip","e","preventDefault","bindingList","Object","bindings","event","forEach","binding","includes","code","ArenaView","arena","context","colors","clear","row","value","x","fillStyle","fillRect","length","PlayerView","tetromino","PreviewView","nextTetromino","scale","width","canvas","clientWidth","height","clientHeight","center","offset","arenaDrawer","gameCanvas","playerDrawer","previewDrawer","previewCanvas","Events","controls","window","addEventListener","keyDown","beforeUnload","removeEventListener","press","Actions","progress","down","collide","up","direction","console","log","Arena","Player","Bag","bag","currentTetromino","pull","next","reset","addScore","summarize","Storage","Canvas","ref","options","element","getContext","close","state","start","visible","hidden","choose","chart","text","classList","add","remove","Elements","document","getElementById","stopwatch","Matrix","Tetromino","template","every","i","shift","Array","item","push","result","num","Math","floor","random","availableShapes","index","split","letter","Error","shapes","array","matrix","fromArray","fill","h","w","number","_","m","o","transposed","reverse","map","amount","splice","data","undefined","isArray","posX","rot","shape","color","blank","I","J","L","O","S","T","Z","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","register"],"sourceRoot":""}